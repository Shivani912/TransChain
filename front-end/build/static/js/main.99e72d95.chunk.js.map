{"version":3,"sources":["blockchain/connectingBlockchain.js","components/navbar/Navbar.js","components/institute/Registration.js","store/actions/registrationActions.js","components/institute/ChooseInstitute.js","components/institute/TranscriptSummary.js","components/institute/ShowAllTranscripts.js","components/institute/Institute.js","components/institute/AddTranscript.js","store/actions/transcriptActions.js","components/institute/ShowTranscripts.js","components/institute/InstituteDetails.js","components/institute/TranscriptDetails.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/transcriptReducer.js","store/reducers/registrationReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["contractAddress","privateKey","contract","wallet","contractWithSigner","Navbar","react_default","a","createElement","className","react_router_dom","to","Registration","state","ins_name","ins_acc_address","ins_pk","ins_contract_addr","handleChange","event","_this","setState","Object","defineProperty","target","id","value","handleSubmit","preventDefault","props","registration","onSubmit","this","type","onChange","htmlFor","name","Component","connect","dispatch","newInstitute","getState","_ref","getFirebase","getFirestore","collection","add","objectSpread","createdAt","Date","then","docRef","alert","console","log","catch","err","tyre","ChooseInstitute","ins_id","ins_addr","TranscriptSummary","transcript","transcriptID","transcriptDate","studentID","studentName","programName","marksDetails","instituteId","ShowAllTranscripts","transcripts","map","key","institute_TranscriptSummary","Institute","institute_Registration","institute_ChooseInstitute","institute_ShowAllTranscripts","prevProps","prevState","length","toaster","notify","position","duration","_unused","compose","firestore","ordered","firestoreConnect","ethers","require","abi","constant","inputs","outputs","payable","stateMutability","provider","getDefaultProvider","addTranscriptToBlockchain","asyncToGenerator","regenerator_default","mark","_callee","JSONObj","string","hex","hashedData","tx","txWait","transcriptIDHex","transcriptIDNum","wrap","_context","prev","next","JSON","stringify","utils","hashMessage","keccak256","addTranscript","sent","wait","logs","data","toString","parseInt","t0","abrupt","message","stop","_x","apply","arguments","login","contractAddr","pk","Contract","Wallet","AddTranscript","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","ShowTranscripts","ownProps","match","params","institutions","addr","institute_AddTranscript","institute_ShowTranscripts","App","navbar_Navbar","react_router","path","component","InstituteDetails","TranscriptDetails","Boolean","window","location","hostname","initState","authReducer","undefined","transcriptReducer","action","registrationReducer","rootReducer","combineReducers","auth","firestoreReducer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"iKAQIA,EACAC,EACAC,EACAC,EACAC,4DCOWC,EAfA,WACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,cAAvB,cACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACVH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,cAAZ,mFCNlBC,6MAEFC,MAAQ,CACJC,SAAU,GACVC,gBAAiB,GACjBC,OAAQ,GACRC,kBAAmB,MAGvBC,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAMK,OAAOC,GAAKN,EAAMK,OAAOE,WAIxCC,aAAe,SAACR,GACZA,EAAMS,iBACNR,EAAKS,MAAMC,aAAaV,EAAKP,gFAM7B,OACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMuB,SAAUC,KAAKL,cACjBrB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,sBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOiB,GAAG,WAAWQ,KAAK,OAAOxB,UAAU,WAAWyB,SAAUF,KAAKd,eACrEZ,EAAAC,EAAAC,cAAA,SAAO2B,QAAQ,YAAf,mBAGJ7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOiB,GAAG,kBAAkBQ,KAAK,OAAOxB,UAAU,WAAWyB,SAAUF,KAAKd,eAC5EZ,EAAAC,EAAAC,cAAA,SAAO2B,QAAQ,mBAAf,qBAGJ7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOiB,GAAG,SAASQ,KAAK,OAAOxB,UAAU,WAAWyB,SAAUF,KAAKd,eACnEZ,EAAAC,EAAAC,cAAA,SAAO2B,QAAQ,UAAf,iBAIA7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+BwB,KAAK,SAASG,KAAK,UAApE,WACI9B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAAb,mBA7CL4B,aA6DZC,cAAQ,KANI,SAACC,GACxB,MAAO,CACHT,aAAc,SAACU,GAAD,OAAkBD,EC9DZ,SAACC,GACzB,OAAM,SAACD,EAAUE,EAAXC,GAAoDA,EAA9BC,aAENC,EAFoCF,EAAlBE,gBAG1BC,WAAW,gBAAgBC,IAArCxB,OAAAyB,EAAA,EAAAzB,CAAA,GACOkB,EADP,CAEIQ,UAAW,IAAIC,QAChBC,KAAK,SAACC,GACLC,MAAM,4BAA8BD,EAAO1B,IAC3C4B,QAAQC,IAAI,4BAA6BH,EAAO1B,IAChDc,EAAS,CAACN,KAAK,gBAAgBO,aAAaA,MAE7Ce,MAAM,SAACC,GACNjB,EAAS,CAACkB,KAAK,sBAAsBD,WDiDA1B,CAAaU,OAI/CF,CAAkC1B,GEXlC8C,6MAlDX7C,MAAQ,CACJ8C,OAAQ,GACRC,SAAU,MAGd1C,aAAe,SAACC,GAEZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACKH,EAAMK,OAAOC,GAAKN,EAAMK,OAAOE,WAIxCC,aAAe,SAACR,GACZA,EAAMS,iBACNyB,QAAQC,IAAIlC,EAAKP,gFAKjB,OACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMuB,SAAUC,KAAKL,cACjBrB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,qBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOiB,GAAG,SAASQ,KAAK,OAAOxB,UAAU,WAAWyB,SAAUF,KAAKd,eACnEZ,EAAAC,EAAAC,cAAA,SAAO2B,QAAQ,UAAf,iBAQJ7B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,qBAAuBqB,KAAKnB,MAAM8C,QACxCrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+BwB,KAAK,SAASG,KAAK,UAApE,SACI9B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAAb,oBAtCF4B,aCefwB,EAhBW,SAAAnB,GAAkB,IAAhBoB,EAAgBpB,EAAhBoB,WACxB,OACIxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcqD,EAAWC,cACzCzD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaqD,EAAWE,eAAxC,KACA1D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaqD,EAAWG,UAAxC,KACA3D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaqD,EAAWI,YAAxC,KACA5D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaqD,EAAWK,YAAxC,KACA7D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaqD,EAAWM,aAAxC,KACA9D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaqD,EAAWO,YAAxC,QCODC,EAfY,SAAA5B,GAAmB,IAAjB6B,EAAiB7B,EAAjB6B,YACzB,OACIjE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,iDACC+D,GAAeA,EAAYC,IAAI,SAAAV,GAC5B,OACAxD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,eAAiBmD,EAAWrC,GAAIgD,IAAKX,EAAWrC,IAC1DnB,EAAAC,EAAAC,cAACkE,EAAD,CAAmBZ,WAAYA,EAAYW,IAAKX,EAAWrC,mCCDrEkD,2LACO,IAEEJ,EAAevC,KAAKH,MAApB0C,YAGP,OACIjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACoE,EAAD,OAEJtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACqE,EAAD,QAGRvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAIXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACsE,EAAD,CAAoBP,YAAaA,kDAOlCQ,EAAWC,GAK1B,IACSD,GAAcA,EAAUR,YAAYU,SAAWjD,KAAKH,MAAM0C,YAAYU,QAC3EC,IAAQC,OAAO,wBAAyB,CACpCC,SAAU,eACVC,SAAU,OAGjB,MAAAC,YAxCejD,cAoDTkD,cACXjD,YAToB,SAACzB,GAErB,MAAM,CACF0D,YAAa1D,EAAM2E,UAAUC,QAAQlB,eAOzCmB,2BAAiB,CACb,CAAE7C,WAAY,iBAHP0C,CAKbZ,sCPnEIgB,EAASC,EAAQ,KAGjBC,EAAM,CAAC,CAACC,UAAW,EAAKC,OAAS,CAAC,CAAC3D,KAAO,gBAAgBH,KAAO,WAAW,CAACG,KAAO,kBAAkBH,KAAO,YAAYG,KAAO,wBAAwB4D,QAAU,CAAC,CAAC5D,KAAO,GAAGH,KAAO,SAASgE,SAAU,EAAMC,gBAAkB,OAAOjE,KAAO,YAAY,CAAC6D,UAAW,EAAMC,OAAS,CAAC,CAAC3D,KAAO,kBAAkBH,KAAO,YAAYG,KAAO,gBAAgB4D,QAAU,CAAC,CAAC5D,KAAO,GAAGH,KAAO,YAAYgE,SAAU,EAAMC,gBAAkB,aAAajE,KAAO,YAAY,CAAC8D,OAAS,GAAGE,SAAU,EAAMC,gBAAkB,aAAajE,KAAO,gBAGxgBkE,EAAWR,EAAOS,mBAAmB,WA6B9BC,EAAyB,eAAA3D,EAAApB,OAAAgF,EAAA,EAAAhF,CAAAiF,EAAAhG,EAAAiG,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAV,EAAAhG,EAAA2G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAE7BT,EAASW,KAAKC,UAAUb,GACxBE,EAAMjB,EAAO6B,MAAMC,YAAYd,GAG/BE,EAAalB,EAAO6B,MAAME,UAAUd,GANPO,EAAAE,KAAA,EAQlBjH,EAAmBuH,cAAcd,GARf,cAQ7BC,EAR6BK,EAAAS,KAAAT,EAAAE,KAAA,EASdP,EAAGe,OATW,OAS7Bd,EAT6BI,EAAAS,KAU7BZ,EAAkBD,EAAOe,KAAK,GAAGC,KAAKC,WAEtCf,EAAkBgB,SAASjB,GAAmB,EAElD3D,QAAQC,IAAI2D,GAdqBE,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAAe,GAAAf,EAAA,SAAAA,EAAAgB,OAAA,SAkB1BhB,EAAAe,GAAIE,SAlBsB,yBAAAjB,EAAAkB,SAAA5B,EAAA,kBAAH,gBAAA6B,GAAA,OAAA5F,EAAA6F,MAAAvG,KAAAwG,YAAA,GAwDtBC,EAlEF,SAACC,EAAcC,GACzB3I,EAAkB0I,EAClBzI,EAAa0I,EAEbzI,EAAW,IAAIyF,EAAOiD,SAAS5I,EAAiB6F,EAAKM,GACrDhG,EAAS,IAAIwF,EAAOkD,OAAO5I,EAAYkG,GACvC/F,EAAqBF,EAASoC,QAAQnC,GACtCkD,QAAQC,IAAI,cQ3BVwF,cACF,SAAAA,EAAYjH,GAAM,IAAAT,EAAA,OAAAE,OAAAyH,EAAA,EAAAzH,CAAAU,KAAA8G,IACd1H,EAAAE,OAAA0H,EAAA,EAAA1H,CAAAU,KAAAV,OAAA2H,EAAA,EAAA3H,CAAAwH,GAAAI,KAAAlH,KAAMH,KAEDhB,MAAQ,CACTkD,aAAc,GAAIC,eAAgB,GAAIC,UAAW,GACjDC,YAAa,GAAIC,YAAa,GAAIC,aAAc,GAChDC,YAAY,IAGhBjD,EAAKF,aAAeE,EAAKF,aAAaiI,KAAlB7H,OAAA8H,EAAA,EAAA9H,CAAAF,IACpBA,EAAKO,aAAeP,EAAKO,aAAawH,KAAlB7H,OAAA8H,EAAA,EAAA9H,CAAAF,IAGpBA,EAAKP,MAAMwD,YAAcjD,EAAKS,MAAMwC,YAbtBjD,4EAgBLD,GACTa,KAAKX,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAgBH,EAAMK,OAAOC,GAAKN,EAAMK,OAAOE,6CAGtCP,GACTA,EAAMS,iBACNI,KAAKH,MAAM8F,cAAc3F,KAAKnB,OAC9BwF,EAA0BrE,KAAKnB,wCAQ/B,OACIP,EAAAC,EAAAC,cAAA,QAAMuB,SAAUC,KAAKL,cACjBrB,EAAAC,EAAAC,cAAA,iCAEAF,EAAAC,EAAAC,cAAA,yEAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOiB,GAAG,eAAeQ,KAAK,OAAOxB,UAAU,WAAWyB,SAAUF,KAAKd,eACzEZ,EAAAC,EAAAC,cAAA,SAAO2B,QAAQ,gBAAf,kBAGJ7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOiB,GAAG,iBAAiBQ,KAAK,OAAOxB,UAAU,WAAWyB,SAAUF,KAAKd,eAC3EZ,EAAAC,EAAAC,cAAA,SAAO2B,QAAQ,kBAAf,oBAGJ7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOiB,GAAG,YAAYQ,KAAK,OAAOxB,UAAU,WAAWyB,SAAUF,KAAKd,eACtEZ,EAAAC,EAAAC,cAAA,SAAO2B,QAAQ,aAAf,eAGJ7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOiB,GAAG,cAAcQ,KAAK,OAAOxB,UAAU,WAAWyB,SAAUF,KAAKd,eACxEZ,EAAAC,EAAAC,cAAA,SAAO2B,QAAQ,eAAf,iBAGJ7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOiB,GAAG,cAAcQ,KAAK,OAAOxB,UAAU,WAAWyB,SAAUF,KAAKd,eACxEZ,EAAAC,EAAAC,cAAA,SAAO2B,QAAQ,eAAf,iBAGJ7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOiB,GAAG,eAAeQ,KAAK,OAAOxB,UAAU,WAAWyB,SAAUF,KAAKd,eACzEZ,EAAAC,EAAAC,cAAA,SAAO2B,QAAQ,gBAAf,qBAGJ7B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+BwB,KAAK,SAASG,KAAK,UAApE,iBACI9B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAAb,iBArEQ4B,aAkFbC,cAAQ,KANI,SAACC,GACxB,MAAO,CACHoF,cAAe,SAAC7D,GAAD,OAAgBvB,ECnFV,SAACuB,GAC1B,OAAM,SAACvB,EAAUE,EAAXC,GAAoDA,EAA9BC,aAENC,EAFoCF,EAAlBE,gBAG1BC,WAAW,eAAeC,IAApCxB,OAAAyB,EAAA,EAAAzB,CAAA,GACOwC,EADP,CAEId,UAAW,IAAIC,QAChBC,KAAK,SAACC,GAELZ,EAAS,CAACN,KAAK,iBAAiB6B,WAAWA,MAC5CP,MAAM,SAACC,GACNjB,EAAS,CAACkB,KAAK,uBAAuBD,WDwEFmE,CAAc7D,OAI/CxB,CAAkCwG,GE5DlCO,EAvBS,SAAA3G,GAAgC,IAA9B6B,EAA8B7B,EAA9B6B,YAAaF,EAAiB3B,EAAjB2B,YAEnC,OACI/D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,wCACK+D,GAAeA,EAAYC,IAAI,SAAAV,GAC5B,OAAGA,EAAWO,cAAgBA,EAE1B/D,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,eAAiBmD,EAAWrC,GAAIgD,IAAKX,EAAWrC,IAC1DnB,EAAAC,EAAAC,cAACkE,EAAD,CAAmBZ,WAAYA,EAAYW,IAAKX,EAAWrC,MAMvDnB,EAAAC,EAAAC,cAAA,OAAKiE,IAAKX,EAAWrC,SC+C9B8D,cACXjD,YAfoB,SAACzB,EAAMyI,GAE3B,IAAM7H,EAAK6H,EAASC,MAAMC,OAAO/H,GAE3BgI,EAAe5I,EAAM2E,UAAUuC,KAAK0B,aAG1C,MAAM,CACFjH,aAHiBiH,EAAeA,EAAahI,GAAM,KAInD4C,YAAa5C,EACb8C,YAAa1D,EAAM2E,UAAUC,QAAQlB,eAMzCmB,2BAAiB,CACb,CAAE7C,WAAY,gBACd,CAAEA,WAAY,iBAJP0C,CAvDU,SAAC1D,GAAU,IAHP6H,EAAMf,EAIxBnG,EAAgBX,EAAhBW,aACA6B,EAAexC,EAAfwC,YACAE,EAAe1C,EAAf0C,YAIP,OAAI/B,GAVqBkH,EAWDlH,EAAavB,kBAXN0H,EAWwBnG,EAAaxB,OAVpEyH,EAAMiB,EAAMf,GAYJrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,kBAA6C4D,GAC7C/D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,oBAA8C+B,EAAa1B,SAA3D,KAA4ER,EAAAC,EAAAC,cAAA,WAC5EF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,uBAAiD+B,EAAazB,gBAA9D,KAAsFT,EAAAC,EAAAC,cAAA,WACtFF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,kBAA4C+B,EAAaxB,OAAzD,KAAwEV,EAAAC,EAAAC,cAAA,WACxEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,qCAA+D+B,EAAavB,kBAA5E,KAAsGX,EAAAC,EAAAC,cAAA,cAIlHF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACmJ,EAAD,CAAetF,YAAaA,KAEhC/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACoJ,EAAD,CAAiBrF,YAAaA,EAAaF,YAAaA,QAOpE/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,qCCCD+E,cACXjD,YAboB,SAACzB,EAAMyI,GAE3B,IAAM7H,EAAK6H,EAASC,MAAMC,OAAO/H,GAE3B8C,EAAc1D,EAAM2E,UAAUuC,KAAKxD,YAGzC,MAAM,CACFT,WAHeS,EAAcA,EAAY9C,GAAM,QASnDiE,2BAAiB,CACb,CAAE7C,WAAY,iBAHP0C,CAzCW,SAAC1D,GAAU,IAC1BiC,EAAcjC,EAAdiC,WAGP,OAAIA,EAEIxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,mBAA8CqD,EAAWC,cACzDzD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,qBAA+CqD,EAAWE,eAA1D,KAAiF1D,EAAAC,EAAAC,cAAA,WACjFF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,gBAA0CqD,EAAWG,UAArD,KAAuE3D,EAAAC,EAAAC,cAAA,WACvEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,kBAA4CqD,EAAWI,YAAvD,KAA2E5D,EAAAC,EAAAC,cAAA,WAC3EF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,kBAA4CqD,EAAWK,YAAvD,KAA2E7D,EAAAC,EAAAC,cAAA,WAC3EF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,sBAAgDqD,EAAWM,aAA3D,KAAgF9D,EAAAC,EAAAC,cAAA,WAChFF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,8BAAwDqD,EAAWO,YAAnE,QAOZ/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,sCCPDqJ,MAff,WACE,OACEvJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACsJ,EAAD,MACAxJ,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,KACEzJ,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAWtF,IACpCrE,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CAAOC,KAAK,wBAAwBC,UAAWC,IAC/C5J,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CAAOC,KAAK,kBAAkBC,UAAWE,QCH/BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShB,MACvB,2DClBN,IAAMiB,EAAY,GAMHC,EAJK,WAA8B,IAA7B5J,EAA6B2H,UAAAvD,OAAA,QAAAyF,IAAAlC,UAAA,GAAAA,UAAA,GAArBgC,EAAqBhC,UAAAvD,OAAA,GAAAuD,UAAA,GAC9C,OAAO3H,GCHL2J,EAAY,GAwBHG,EAbW,WAA8B,IAA7B9J,EAA6B2H,UAAAvD,OAAA,QAAAyF,IAAAlC,UAAA,GAAAA,UAAA,GAArBgC,EAAUI,EAAWpC,UAAAvD,OAAA,EAAAuD,UAAA,QAAAkC,EACpD,OAAOE,EAAO3I,MACV,IAAK,iBAED,OADAoB,QAAQC,IAAI,mBAAoBsH,EAAO9G,YAChCjD,EACX,IAAK,uBAED,OADAwC,QAAQC,IAAI,0BAA2BsH,EAAOpH,KACvC3C,EACX,QACI,OAAOA,ICpBb2J,EAAY,GAgBHK,EAba,WAA8B,IAA7BhK,EAA6B2H,UAAAvD,OAAA,QAAAyF,IAAAlC,UAAA,GAAAA,UAAA,GAArBgC,EAAUI,EAAWpC,UAAAvD,OAAA,EAAAuD,UAAA,QAAAkC,EACtD,OAAOE,EAAO3I,MACV,IAAK,gBAED,OADAoB,QAAQC,IAAI,kBAAmBsH,EAAOpI,cAC/B3B,EACX,IAAK,sBAED,OADAwC,QAAQC,IAAI,yBAA0BsH,EAAOpH,KACtC3C,EACX,QACI,OAAOA,aCCJiK,GAPKC,YAAgB,CAChCC,KAAMP,EACN3G,WAAY6G,EACZnF,UAAWyF,oBACXzI,aAAcqI,iDCGhBK,KAASC,cATI,CACXC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,GACfC,kBAAmB,eACnBC,MAAO,wCAKMR,UAAf,ECHIS,GAAQC,YAAYd,GACtBvF,YACIsG,YAAgBC,KAAMC,kBAAkB,CAAEpJ,0BAAYC,gCACtDoJ,0BAAeC,IACfC,6BAAmBD,MAI3BE,IAASC,OAAO9L,EAAAC,EAAAC,cAAC6L,EAAA,EAAD,CAAUV,MAAQA,IAAQrL,EAAAC,EAAAC,cAAC8L,EAAD,OAAoBC,SAASC,eAAe,SN4GhF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzJ,KAAK,SAAApB,GACjCA,EAAa8K","file":"static/js/main.99e72d95.chunk.js","sourcesContent":["const ethers = require('ethers')\r\n// var fs  = require('fs');\r\n\r\nconst abi = [{\"constant\":true,\"inputs\":[{\"name\":\"_transcriptID\",\"type\":\"uint256\"},{\"name\":\"_transcriptHash\",\"type\":\"bytes32\"}],\"name\":\"isTranscriptAuthentic\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_transcriptHash\",\"type\":\"bytes32\"}],\"name\":\"addTranscript\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]\r\n// const bytecode = JSON.parse(fs.readFileSync('Transcript_sol_transcriptVerification.bin').toString())\r\n\r\nconst provider = ethers.getDefaultProvider('ropsten')\r\n\r\nlet contractAddress\r\nlet privateKey\r\nlet contract\r\nlet wallet\r\nlet contractWithSigner\r\n\r\n// async function register(pk) {\r\n//     wallet = new ethers.Wallet(pk, provider)\r\n//     let factory = new ethers.ContractFactory(abi, bytecode, wallet)\r\n//     let contract = await factory.deploy()\r\n//     contractAddress = contract.address\r\n//     await contract.deployed()\r\n//     console.log(contractAddress)\r\n//     // return contractAddress\r\n// }\r\n// register('0xD8A0B1144A27811ECF01841B323255B510AF23A7AD31B155E898F10BADAC017D')\r\n\r\nconst login = (contractAddr, pk) => {\r\n    contractAddress = contractAddr\r\n    privateKey = pk\r\n\r\n    contract = new ethers.Contract(contractAddress, abi, provider)\r\n    wallet = new ethers.Wallet(privateKey, provider)\r\n    contractWithSigner = contract.connect(wallet)\r\n    console.log(\"logged in\")\r\n}\r\n\r\nexport const addTranscriptToBlockchain = async (JSONObj) => {\r\n    try{\r\n        let string = JSON.stringify(JSONObj)\r\n        let hex = ethers.utils.hashMessage(string)\r\n        // console.log(hex)\r\n\r\n        let hashedData = ethers.utils.keccak256(hex)\r\n\r\n        let tx = await contractWithSigner.addTranscript(hashedData)\r\n        let txWait = await tx.wait()\r\n        let transcriptIDHex = txWait.logs[0].data.toString()\r\n        // console.log(parseInt(transcriptID))\r\n        let transcriptIDNum = parseInt(transcriptIDHex) - 1\r\n        // return transcriptIDNum\r\n        console.log(transcriptIDNum)\r\n    }\r\n    catch(err) {\r\n        // console.log(err)\r\n        return err.message\r\n    }\r\n    \r\n}\r\n\r\n// const verifyTranscript = async (JSONObj, id) => {\r\n//     try{\r\n\r\n//         let string = JSON.stringify(JSONObj)\r\n//         let hex = ethers.utils.hashMessage(string)\r\n//         // console.log(hex)\r\n\r\n//         let hashedData = ethers.utils.keccak256(hex)\r\n\r\n//         let tx = await contractWithSigner.isTranscriptAuthentic(id, hashedData)\r\n//         // console.log(typeof(tx))\r\n//         // console.log(tx)\r\n//         return tx\r\n//     }\r\n//     catch(err) {\r\n        \r\n//         if(err.reason){\r\n//             if(err.reason.toString() === \"Invalid ID\")\r\n//                 // console.log(\"bad ID\")\r\n//                 return \"bad ID\"\r\n//             if(err.reason.toString() === \"Transcript not authentic\")\r\n//                 // console.log(\"bad transcript\")\r\n//                 return \"bad transcript\"\r\n//         }\r\n//         else {\r\n//             console.log(err)\r\n//         }\r\n//     }\r\n// }\r\n\r\n// login('0x76045a741daf7c761861c1123bf6d7ea7338aa15','0xD8A0B1144A27811ECF01841B323255B510AF23A7AD31B155E898F10BADAC017D')\r\n// addTranscript({'ID': 123, 'Name': 'abc'})\r\n// verifyTranscript({'ID': 123, 'Name': 'abc'})\r\nexport default (login)\r\n// export default (addTranscriptToBlockchain)\r\n// (verifyTranscript)","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Transchain</Link>\r\n                <ul className=\"right\">\r\n                    <li>\r\n                        <NavLink to='/institute'>Institution</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { Component } from 'react' \r\n// import { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { registration } from '../../store/actions/registrationActions'\r\n\r\nclass Registration extends Component {\r\n    \r\n    state = {\r\n        ins_name: '', \r\n        ins_acc_address: '',\r\n        ins_pk: '',\r\n        ins_contract_addr: ''\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.registration(this.state);\r\n        // console.log(\"State after registration\")\r\n        // console.log(this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} >\r\n                    <h4 className=\"grey-text text-darken-3\"> Want to join us ?</h4>\r\n                    <div className=\"input-field\">\r\n                        <input id=\"ins_name\" type=\"text\" className=\"validate\" onChange={this.handleChange}/>\r\n                        <label htmlFor=\"ins_name\">Institute Name</label>\r\n                    </div>\r\n                    \r\n                    <div className=\"input-field\"> \r\n                        <input id=\"ins_acc_address\" type=\"text\" className=\"validate\" onChange={this.handleChange}/>\r\n                        <label htmlFor=\"ins_acc_address\">Metamask Address</label>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\"> \r\n                        <input id=\"ins_pk\" type=\"text\" className=\"validate\" onChange={this.handleChange}/>\r\n                        <label htmlFor=\"ins_pk\">Institute PK</label>\r\n                    </div>\r\n\r\n                    {/* <Link to=\"/instituteDetails/:id\"> */}\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Register\r\n                                <i className=\"material-icons right\">send</i>\r\n                            </button>\r\n                        </div>\r\n                    {/* </Link> */}\r\n                </form>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        registration: (newInstitute) => dispatch(registration(newInstitute))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Registration)","export const registration = (newInstitute) =>{\r\n    return(dispatch, getState,{ getFirebase,getFirestore }) =>{\r\n        // make async call to FireStore database\r\n        const firestore = getFirestore();\r\n        firestore.collection('institutions').add({\r\n            ...newInstitute,\r\n            createdAt: new Date()\r\n        }).then((docRef) => {\r\n            alert(\"Institute Added with ID: \" + docRef.id);\r\n            console.log(\"Institute Added with ID: \", docRef.id);\r\n            dispatch({type:'ADD_INSTITUTE',newInstitute:newInstitute});\r\n            // window.location.href('/instituteDetails/' + docRef.id)\r\n        }).catch((err) => {\r\n            dispatch({tyre:'ADD_INSTITUTE_ERROR',err});\r\n        })\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass ChooseInstitute extends Component\r\n{\r\n    state = {\r\n        ins_id: '', \r\n        ins_addr: ''\r\n    }\r\n\r\n    handleChange = (event) => {\r\n\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        console.log(this.state)\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <h4 className=\"grey-text text-darken-3\">Already a member?</h4>\r\n                    <div className=\"input-field\">\r\n                        <input id=\"ins_id\" type=\"text\" className=\"validate\" onChange={this.handleChange}/>\r\n                        <label htmlFor=\"ins_id\">Institute ID</label>\r\n                    </div>\r\n\r\n                    {/* <div className=\"input-field\">\r\n                        <input id=\"ins_addr\" type=\"text\" className=\"validate\" onChange={this.handleChange}/>\r\n                        <label htmlFor=\"ins_addr\">Address</label>\r\n                    </div> */}\r\n\r\n                    <Link to={'/instituteDetails/' + this.state.ins_id}>\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Log In\r\n                                <i className=\"material-icons right\">send</i>\r\n                            </button>\r\n                        </div>\r\n                    </Link>\r\n                    \r\n                </form>\r\n            </div>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ChooseInstitute","import React from 'react' \r\n\r\nconst TranscriptSummary = ({transcript}) => {\r\n    return(\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{transcript.transcriptID}</span>\r\n                <span className=\"card-text\">{transcript.transcriptDate} </span>\r\n                <span className=\"card-text\">{transcript.studentID} </span>\r\n                <span className=\"card-text\">{transcript.studentName} </span>\r\n                <span className=\"card-text\">{transcript.programName} </span>\r\n                <span className=\"card-text\">{transcript.marksDetails} </span>\r\n                <span className=\"card-text\">{transcript.instituteId} </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TranscriptSummary","import React from 'react' \r\nimport TranscriptSummary from './TranscriptSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ShowAllTranscripts = ({transcripts}) => {\r\n    return(\r\n        <div>\r\n            <h3>All Transcripts from All Institutes</h3>\r\n            {transcripts && transcripts.map(transcript =>{\r\n                return(\r\n                <Link to={'/transcript/' + transcript.id} key={transcript.id} >\r\n                <TranscriptSummary transcript={transcript} key={transcript.id} />\r\n                </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowAllTranscripts","import React, { Component } from 'react'\r\nimport Registration from './Registration'\r\nimport ChooseInstitute from './ChooseInstitute'\r\nimport ShowAllTranscripts from './ShowAllTranscripts'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport toaster from 'toasted-notes';\r\nimport 'toasted-notes/src/styles.css';\r\n\r\nclass Institute extends Component {\r\n    render() {\r\n        // console.log(this.props)\r\n        const {transcripts} = this.props;\r\n        // console.log(transcripts);\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <Registration/>\r\n                    </div>\r\n                    <div className=\"col s12 m6\">\r\n                        <ChooseInstitute/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {/* <div className=\"col s12 m6\">\r\n                        <AddTranscript/>\r\n                    </div> */}\r\n                    <div className=\"col s12 m6\">\r\n                        <ShowAllTranscripts transcripts={transcripts} />\r\n                    </div>\r\n                </div>\r\n            </div>        \r\n            )\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState) {\r\n        // only update chart if the data has changed\r\n        // console.log(prevProps.transcripts.length)\r\n        // console.log(this.props.transcripts.length)\r\n\r\n        try{\r\n            if ( prevProps && (prevProps.transcripts.length !== this.props.transcripts.length) ) {\r\n            toaster.notify(\"New Transcripts Added\", {\r\n                position: 'bottom-right', // top-left, top, top-right, bottom-left, bottom, bottom-right\r\n                duration: null // This notification will not automatically close\r\n              }); \r\n            }\r\n        }catch{}\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    // console.log(state);\r\n    return{\r\n        transcripts: state.firestore.ordered.transcripts\r\n    }\r\n}\r\n\r\n// export default connect(mapStateToProps)(Institute)\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'transcripts' }\r\n    ])\r\n)(Institute)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTranscript } from '../../store/actions/transcriptActions'\r\nimport { addTranscriptToBlockchain } from '../../blockchain/connectingBlockchain'\r\n\r\nclass AddTranscript extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        // console.log(props);\r\n        this.state = {\r\n            transcriptID: '', transcriptDate: '', studentID: '',\r\n            studentName: '', programName: '', marksDetails: '',\r\n            instituteId:''\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        // console.log(this.props.instituteId)\r\n        this.state.instituteId = this.props.instituteId;\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.addTranscript(this.state);\r\n        addTranscriptToBlockchain(this.state)\r\n        // console.log(this.state);\r\n        // alert('Transcript Added: \\n transcriptID: '+ this.state.transcriptID + ' transcriptDate: '+ this.state.transcriptDate + \r\n        // '\\n studentID: '+ this.state.studentID + ' studentName: '+ this.state.studentName +\r\n        // '\\n programName: '+ this.state.programName + ' marksDetails: '+ this.state.marksDetails)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} >\r\n                <h3>Upload a Transcript</h3>\r\n\r\n                <p> Enter the Transcript Details as per the Standardised Format</p>\r\n               \r\n                <div className=\"input-field\"> \r\n                    <input id=\"transcriptID\" type=\"text\" className=\"validate\" onChange={this.handleChange}/>\r\n                    <label htmlFor=\"transcriptID\">Transcript ID</label>\r\n                </div>\r\n\r\n                <div className=\"input-field\"> \r\n                    <input id=\"transcriptDate\" type=\"text\" className=\"validate\" onChange={this.handleChange}/>\r\n                    <label htmlFor=\"transcriptDate\">Transcript Date</label>\r\n                </div>\r\n\r\n                <div className=\"input-field\"> \r\n                    <input id=\"studentID\" type=\"text\" className=\"validate\" onChange={this.handleChange}/>\r\n                    <label htmlFor=\"studentID\">Student ID</label>\r\n                </div>\r\n\r\n                <div className=\"input-field\"> \r\n                    <input id=\"studentName\" type=\"text\" className=\"validate\" onChange={this.handleChange}/>\r\n                    <label htmlFor=\"studentName\">Student Name</label>\r\n                </div>\r\n\r\n                <div className=\"input-field\"> \r\n                    <input id=\"programName\" type=\"text\" className=\"validate\" onChange={this.handleChange}/>\r\n                    <label htmlFor=\"programName\">Program Name</label>\r\n                </div>\r\n\r\n                <div className=\"input-field\"> \r\n                    <input id=\"marksDetails\" type=\"text\" className=\"validate\" onChange={this.handleChange}/>\r\n                    <label htmlFor=\"marksDetails\">Details of Marks</label>\r\n                </div>\r\n\r\n                <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Add Transcript\r\n                    <i className=\"material-icons right\">send</i>\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addTranscript: (transcript) => dispatch(addTranscript(transcript))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTranscript)","export const addTranscript = (transcript) =>{\r\n    return(dispatch, getState,{ getFirebase,getFirestore }) =>{\r\n        // make async call to FireStore database\r\n        const firestore = getFirestore();\r\n        firestore.collection('transcripts').add({\r\n            ...transcript,\r\n            createdAt: new Date()\r\n        }).then((docRef) => {\r\n            // console.log(\"Transcript written with ID: \", docRef.id);\r\n            dispatch({type:'ADD_TRANSCRIPT',transcript:transcript});\r\n        }).catch((err) => {\r\n            dispatch({tyre:'ADD_TRANSCRIPT_ERROR',err});\r\n        })\r\n    }\r\n};","import React from 'react' \r\nimport TranscriptSummary from './TranscriptSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ShowTranscripts = ({transcripts, instituteId}) => {\r\n    // console.log(\"ID \", instituteId)\r\n    return(\r\n        <div>\r\n        <h3>Transcripts Uploaded by us</h3>\r\n            {transcripts && transcripts.map(transcript =>{\r\n                if(transcript.instituteId === instituteId){\r\n                    return(\r\n                    <Link to={'/transcript/' + transcript.id} key={transcript.id} >\r\n                    <TranscriptSummary transcript={transcript} key={transcript.id} />\r\n                    </Link>\r\n                )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div key={transcript.id}></div>\r\n                    )\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowTranscripts","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport AddTranscript from './AddTranscript'\r\nimport ShowTranscripts from './ShowTranscripts'\r\nimport login from '../../blockchain/connectingBlockchain'\r\n\r\nconst connectToBlockchain = (addr, pk) => {\r\n    login(addr, pk)\r\n}\r\nconst InstituteDetails = (props) => {\r\n    const {newInstitute} = props;\r\n    const {instituteId} = props;\r\n    const {transcripts} = props;\r\n\r\n    // console.log(newInstitute)\r\n\r\n    if (newInstitute){\r\n        connectToBlockchain(newInstitute.ins_contract_addr,newInstitute.ins_pk)\r\n        return(\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"card z-depth-0\">\r\n                        <div className=\"card-content grey-text text-darken-3\">\r\n                            <span className=\"card-title\">Institute Id - {instituteId}</span>\r\n                            <span className=\"card-text\">Institute Name - {newInstitute.ins_name} </span><br/>\r\n                            <span className=\"card-text\">Institute Address - {newInstitute.ins_acc_address} </span><br/>\r\n                            <span className=\"card-text\">Institute PK - {newInstitute.ins_pk} </span><br/>\r\n                            <span className=\"card-text\">Institute SmartContract Address - {newInstitute.ins_contract_addr} </span><br/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <AddTranscript instituteId={instituteId} />\r\n                    </div>\r\n                    <div className=\"col s12 m6\">\r\n                        <ShowTranscripts transcripts={transcripts} instituteId={instituteId} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className=\"container center\">\r\n                <p>Loading Institute ...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps)=>{\r\n    // console.log(ownProps);\r\n    const id = ownProps.match.params.id;\r\n    // const id = '49R71wE3A6GdxRBxR95r';\r\n    const institutions = state.firestore.data.institutions;\r\n    const newInstitute = institutions ? institutions[id] : null\r\n    // console.log(newInstitute)\r\n    return{\r\n        newInstitute: newInstitute,\r\n        instituteId: id,\r\n        transcripts: state.firestore.ordered.transcripts\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'institutions' },\r\n        { collection: 'transcripts' }\r\n    ])\r\n)(InstituteDetails)\r\n\r\n// export default class InstituteDetails extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//         console.log(\"InstituteDetails Props\")\r\n//         console.log(props)\r\n//         this.state = {id: props.match.params.id}\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <div className=\"dashboard container\">\r\n//                 <h2>Profile</h2>\r\n//                 <h4>ID: {this.state.id}</h4>\r\n//                 <h4>Name:</h4>\r\n//                 <h4>Address:</h4>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\n\r\nconst TranscriptDetails = (props) => {\r\n    const {transcript} = props;\r\n    // console.log(transcript)\r\n\r\n    if (transcript){\r\n        return(\r\n            <div className=\"container section\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content grey-text text-darken-3\">\r\n                        <span className=\"card-title\">Transcript Id - {transcript.transcriptID}</span>\r\n                        <span className=\"card-text\">Transcript Date - {transcript.transcriptDate} </span><br/>\r\n                        <span className=\"card-text\">Student Id - {transcript.studentID} </span><br/>\r\n                        <span className=\"card-text\">Student Name - {transcript.studentName} </span><br/>\r\n                        <span className=\"card-text\">Program Name - {transcript.programName} </span><br/>\r\n                        <span className=\"card-text\">Details of Marks - {transcript.marksDetails} </span><br/>\r\n                        <span className=\"card-text\">Certified by Institution - {transcript.instituteId} </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return(\r\n            <div className=\"container center\">\r\n                <p>Loading Transcript ...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps)=>{\r\n    // console.log(ownProps);\r\n    const id = ownProps.match.params.id;\r\n    // const id = 'HXsnTzJJQr7GFckYYI4a123';\r\n    const transcripts = state.firestore.data.transcripts;\r\n    const transcript = transcripts ? transcripts[id] : null\r\n    // console.log(transcript)\r\n    return{\r\n        transcript: transcript\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'transcripts' }\r\n    ])\r\n)(TranscriptDetails)","import React from 'react'; \r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Navbar from './components/navbar/Navbar'\r\nimport Institute from './components/institute/Institute'\r\nimport InstituteDetails from './components/institute/InstituteDetails'\r\nimport TranscriptDetails from './components/institute/TranscriptDetails'\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Navbar/>\r\n        <Switch>\r\n          <Route path='/institute' component={Institute} />\r\n          <Route path='/instituteDetails/:id' component={InstituteDetails} />\r\n          <Route path='/transcript/:id' component={TranscriptDetails} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {}\r\n\r\nconst authReducer = (state = initState,action) => {\r\n    return state;\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    // transcripts:[\r\n    //     {id:'1', transcriptID: 'T1', transcriptDate: 'D1', studentID: 'S1',\r\n    //     studentName: 'SN1', programName: 'P1', marksDetails: 'M1'},\r\n    //     {id:'2', transcriptID: 'T2', transcriptDate: 'D2', studentID: 'S2',\r\n    //     studentName: 'SN2', programName: 'P2', marksDetails: 'M2'},\r\n    //     {id:'3', transcriptID: 'T3', transcriptDate: 'D3', studentID: 'S3',\r\n    //     studentName: 'SN3', programName: 'P3', marksDetails: 'M3'}\r\n    // ]\r\n}\r\n\r\nconst transcriptReducer = (state = initState,action) => {\r\n    switch(action.type){\r\n        case 'ADD_TRANSCRIPT':\r\n            console.log(\"Added Transcript\", action.transcript);\r\n            return state;\r\n        case 'ADD_TRANSCRIPT_ERROR':\r\n            console.log(\"Error Adding Transcript\", action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default transcriptReducer","const initState = {\r\n}\r\n\r\nconst registrationReducer = (state = initState,action) => {\r\n    switch(action.type){\r\n        case 'ADD_INSTITUTE':\r\n            console.log(\"Added Institute\", action.newInstitute);\r\n            return state;\r\n        case 'ADD_INSTITUTE_ERROR':\r\n            console.log(\"Error Adding Institute\", action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default registrationReducer","import authReducer from './authReducer'\r\nimport transcriptReducer from './transcriptReducer'\r\nimport registrationReducer from './registrationReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    transcript: transcriptReducer,\r\n    firestore: firestoreReducer,\r\n    newInstitute: registrationReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyCRigIXLDkPY6L2cvVwqqEtNq-ZAERN5Dg\",\r\n    authDomain: \"transchain-gbc.firebaseapp.com\",\r\n    databaseURL: \"https://transchain-gbc.firebaseio.com\",\r\n    projectId: \"transchain-gbc\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"789734830513\",\r\n    appId: \"1:789734830513:web:0707f9e148ecce99\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  // firebase.firestore().settings({ timestampsInSnapshots : true});\r\n\r\n  export default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\r\nimport firebaseConfig from './config/firebaseConfig'\r\n\r\nconst store = createStore(rootReducer, \r\n    compose(\r\n        applyMiddleware(thunk.withExtraArgument({ getFirebase,getFirestore })),\r\n        reduxFirestore(firebaseConfig),\r\n        reactReduxFirebase(firebaseConfig)\r\n    )\r\n);\r\n\r\nReactDOM.render(<Provider store={ store }><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}